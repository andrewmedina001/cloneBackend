{
    "openapi": "3.0.3",
    "info": {
      "title": "Swagger Petstore - OpenAPI 3.0",
      "description": "Description of aplication",
      "version": "1.0.1"
    },
    "servers": [
      {
        "url": "https://mypage.com"
      }
    ],
    "tags": [
      {
        "name": "categories",
        "description": "Everything about your Pets"
      },
      {
        "name": "payments",
        "description": "Access to Petstore orders"
      },
      {
        "name": "users",
        "description": "Operations about user"
      },
      {
        "name": "products",
        "description": "Operations about user"
      }
    ],
    "paths": {
      "/categories": {
        "post": {
          "tags": [
            "categories"
          ],
          "summary": "Create new category.",
          "description": "Create a category.",
          "operationId": "postCategory",
          "requestBody": {
            "description": "Create new Category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            },
            "405": {
              "description": "Invalid input"
            }
          }
        },
        "get": {
          "tags": [
            "categories"
          ],
          "summary": "Summary getCategories",
          "description": "Description getCategories",
          "operationId": "getCategories",
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Category"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid status value"
            }
          }
        }
      },
      "/categories/{id}": {
        "get": {
          "tags": [
            "categories"
          ],
          "summary": "Return specific category",
          "description": "Return category by find of the ID",
          "operationId": "getCategoryById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of pet to return",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            }
          }
        },
        "put": {
          "tags": [
            "categories"
          ],
          "summary": "Update Category",
          "description": "Update the data of category by find for the ID",
          "operationId": "updateCategory",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of pet to return",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "description": "Update an existent pet in the store",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid ID"
            }
          }
        },
        "delete": {
          "tags": [
            "categories"
          ],
          "summary": "Delete a category",
          "description": "Delete a category by find of the id",
          "operationId": "deleteCategory",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "description": "Token to validate permissions",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "ID of category to delete",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid Token or ID value"
            }
          }
        }
      },
      "/payments": {
        "post": {
          "tags": [
            "payments"
          ],
          "summary": "Create new pay for test.",
          "description": "Test of correct functionaly",
          "operationId": "createTestUser",
          "requestBody": {
            "description": "Create new pay",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Paymentreturn"
                  }
                }
              }
            },
            "405": {
              "description": "Invalid input"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Category": {
          "required": [
            "cat_name",
            "cat_desc",
            "cat_img"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "example": 19
            },
            "cat_name": {
              "type": "string",
              "example": "Category Name"
            },
            "cat_desc": {
              "type": "string",
              "example": "Description of category"
            },
            "cat_img": {
              "type": "string",
              "example": "URL-imagen"
            }
          }
        },
        "Payment": {
          "required": [
            "site_id"
          ],
          "type": "object",
          "properties": {
            "site_id": {
              "type": "string",
              "example": "MPA || MPE || MPI"
            }
          }
        },
        "Paymentreturn": {
          "type": "object",
          "properties": {
            "message": {
              "description": "return an object of mercadopago"
            }
          }
        }
      }
    }
  }